//1.Wap to design a class account using inheritance and static that shows fuctions(Withdrwal and diposite).
class Account {
    private String accountNumber;
    private double balance;

    public Account(String accountNumber, double initialBalance) {
        this.accountNumber = accountNumber;
        this.balance = initialBalance;
    }

    public void deposit(double amount) {
        if (amount > 0) {
            balance += amount;
            System.out.println("Deposited: $" + amount);
        } else {
            System.out.println("Invalid deposit amount.");
        }
    }

    public void withdraw(double amount) {
        if (amount > 0 && balance >= amount) {
            balance -= amount;
            System.out.println("Withdrawn: $" + amount);
        } else {
            System.out.println("Insufficient funds or invalid withdrawal amount.");
        }
    }

    public double getBalance() {
        return balance;
    }

    public static void main(String[] args) {
        Account savingsAccount = new Account("S12345", 1000.0);
        Account checkingAccount = new Account("C67890", 500.0);

        System.out.println("Initial Balances:");
        System.out.println("Savings Account Balance: $" + savingsAccount.getBalance());
        System.out.println("Checking Account Balance: $" + checkingAccount.getBalance());

        savingsAccount.deposit(200.0);
        checkingAccount.withdraw(100.0);

        System.out.println("\nUpdated Balances:");
        System.out.println("Savings Account Balance: $" + savingsAccount.getBalance());
        System.out.println("Checking Account Balance: $" + checkingAccount.getBalance());
    }
}



//2.Wap to find factorial of given no using recursion.
import java.util.*;
class Recursion
{
	static int factorial (int n)
	{
		if (n==1)
			return 1;
		else 
			return (n*factorial(n-1));
	}
	public static void main( String[] args)
	{
		Scanner s=new Scanner(System.in);
		System.out.println("Enter number for factorial");
		int n=s.nextInt();
		System.out.println("Factorial of "+n+" is "+factorial(n));
	}
}

//3.Wap to design a class using abstract metheod and classes.
//4.Write program to implement multiple interfaces.
